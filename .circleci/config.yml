---
version: 2.1

executors:
  container:
    docker:
      - image: nixos/nix
  performabot-build:
    docker:
      - image: saschagrunert/performabot-build

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - build-static
      - deploy:
          requires:
            - build
            - doc-publish
            - image
            - lint
            - test
          filters:
            branches:
              only: master
      - doc
      - doc-publish:
          requires:
            - doc
          filters:
            branches:
              only: master
      - image:
          requires:
            - build-static
      - lint
      - test

prepare-env: &prepare-env
  run:
    name: Install dependencies
    command: apk add -y bash ca-certificates curl findutils git make openssh

jobs:
  build:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-build-{{ checksum "nix/nixpkgs.json" }}
      - run:
          name: build
          command: make build
      - save_cache:
          key: v1-build-{{ checksum "nix/nixpkgs.json" }}
          paths:
            - /nix
      - store_artifacts:
          path: result/bin
          destination: bin
      - store_artifacts:
          path: result/lib
          destination: lib

  build-static:
    executor: performabot-build
    steps:
      - <<: *prepare-env
      - checkout
      - run:
          name: build
          command: make build-static
      - store_artifacts:
          path: result/bin
          destination: bin
      - store_artifacts:
          path: result/lib
          destination: lib
      - persist_to_workspace:
          root: .
          paths:
            - result/bin

  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Login to registry
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Load the image and tag
          command: |
            docker load -i build/image-performabot.tar
            docker tag localhost/performabot saschagrunert/performabot
      - run:
          name: Push the image
          command: docker push saschagrunert/performabot

  doc:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-doc-{{ checksum "nix/nixpkgs.json" }}
      - run:
          name: documentation
          command: make doc
      - save_cache:
          key: v1-doc-{{ checksum "nix/nixpkgs.json" }}
          paths:
            - /nix
            - dist-newstyle
      - store_artifacts:
          path: dist-newstyle
          destination: .
      - persist_to_workspace:
          root: .
          paths:
            - dist-newstyle

  doc-publish:
    executor: container
    steps:
      - add_ssh_keys:
          fingerprints:
            - bd:c1:fb:d1:82:51:92:b3:00:1c:e0:f8:99:a3:40:46
      - <<: *prepare-env
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Setup git
          command: |
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" \
              >> ~/.ssh/config
            git config --global user.email mail@saschagrunert.de
            git config --global user.name "CircleCI"
      - run:
          name: Deploy documentation
          command: |
            git fetch origin gh-pages
            git checkout -f gh-pages
            mv dist-newstyle /
            rm -rf *
            mv $(find /dist-newstyle -name index.html -printf '%h')/* .
            git add .
            git diff-index --quiet HEAD || git commit -m 'Update documentation'
            git push -f origin gh-pages

  image:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: setup container policy
          command: |
            mkdir -p /etc/containers
            cp hack/policy.json /etc/containers
      - restore_cache:
          keys:
            - v1-image-{{ checksum "nix/nixpkgs.json" }}
      - run:
          name: create container image
          command: make image-performabot
      - save_cache:
          key: v1-image-{{ checksum "nix/nixpkgs.json" }}
          paths:
            - /nix
      - persist_to_workspace:
          root: .
          paths:
            - build/image-performabot.tar
      - store_artifacts:
          path: build/image-performabot.tar
          destination: build/image-performabot.tar

  lint:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-lint-{{ checksum "nix/nixpkgs.json" }}
      - run:
          name: lint
          command: make lint
      - save_cache:
          key: v1-lint-{{ checksum "nix/nixpkgs.json" }}
          paths:
            - /nix

  test:
    executor: container
    steps:
      - <<: *prepare-env
      - checkout
      - restore_cache:
          keys:
            - v1-test-{{ checksum "nix/nixpkgs.json" }}
      - run:
          name: test and coverage report
          command: make coverage
      - save_cache:
          key: v1-test-{{ checksum "nix/nixpkgs.json" }}
          paths:
            - /nix
            - dist-newstyle
      - store_artifacts:
          path: dist-newstyle
          destination: .
